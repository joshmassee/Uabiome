shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp('~/Documents/UA_POSTDOC/interns/Shelby_engineering_toyD/Uabiome/shiny_app')
runApp('~/Documents/UA_POSTDOC/interns/Shelby_engineering_toyD/Uabiome/shiny_app')
setwd("~/Documents/UA_POSTDOC/interns/Shelby_engineering_toyD/Uabiome/shiny_app")
dataset1 <- readr::read_csv("format_samples.csv") %>% rename("Shannon index"="Shannon_alpha", "Sorensen index"="Sorensen_beta")
dataset1 %>% select(Genus, sample, Genus_count) %>%
filter(sample %in% c(input$sample, "sample_average")) %>% group_by(sample) %>%
arrange(desc(Genus_count)) %>% top_n(10)
View(dataset1)
dataset1 %>% select(Genus, sample, Genus_count) %>%
filter(sample %in% c("sample1", "sample_average")) %>% group_by(sample) %>%
arrange(desc(Genus_count)) %>% top_n(10)
test<- dataset1 %>% select(Genus, sample, Genus_count) %>%
filter(sample %in% c("sample1", "sample_average")) %>% group_by(sample) %>%
arrange(desc(Genus_count)) %>% top_n(10)
View(test)
runApp()
test %>% ggplot(aes(fill=Genus, y=Genus_count, x=sample)) +
geom_bar(position="fill", stat="identity")+
scale_fill_viridis(discrete = T) +
ggtitle("Comparison to average population") +
theme_ipsum() +
ylab("% of the population")
test<- dataset1 %>% select(Genus, sample, Genus_count) %>%
filter(sample %in% c("sample1")) %>% group_by(sample) %>%
arrange(desc(Genus_count)) %>% top_n(10)
test %>% ggplot(aes(fill=Genus, y=Genus_count, x=sample)) +
geom_bar(position="fill", stat="identity")+
scale_fill_viridis(discrete = T) +
ggtitle("Comparison to average population") +
theme_ipsum() +
ylab("% of the population")
View(test)
View(dataset1)
runApp()
View(dataset1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(tidyr)
library(readr)
info_dataset<- read_csv("sample_info.csv", col_types=cols(date = col_date("%Y-%m-%d")))
View(info_dataset)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?tabPanel
runApp()
?navlistPanel
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
